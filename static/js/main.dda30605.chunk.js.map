{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","class","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAkGeA,0LA7Fb,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,KAAGE,MAAM,SAAT,oDAEAJ,EAAAC,EAAAC,cAAA,iRAGAF,EAAAC,EAAAC,cAAA,kXAIAF,EAAAC,EAAAC,cAAA,muBAKAF,EAAAC,EAAAC,cAAA,+bAIAF,EAAAC,EAAAC,cAAA,iBAEAF,EAAAC,EAAAC,cAAA,KAAGE,MAAM,WAAT,wDACAJ,EAAAC,EAAAC,cAAA,qeAIAF,EAAAC,EAAAC,cAAA,uaAGCF,EAAAC,EAAAC,cAAA,SACCF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,uCAAR,oCAEDL,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,yDAAR,uBAEDL,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,2CAAR,wBAXH,uZAiBAL,EAAAC,EAAAC,cAAA,iBAEAF,EAAAC,EAAAC,cAAA,KAAGE,MAAM,WAAT,uBACAJ,EAAAC,EAAAC,cAAA,obAIAF,EAAAC,EAAAC,cAAA,iBAEAF,EAAAC,EAAAC,cAAA,KAAGE,MAAM,WAAT,uDACAJ,EAAAC,EAAAC,cAAA,07BAMAF,EAAAC,EAAAC,cAAA,iBAEAF,EAAAC,EAAAC,cAAA,KAAGE,MAAM,WAAT,oEACAJ,EAAAC,EAAAC,cAAA,80BAMAF,EAAAC,EAAAC,cAAA,iBAEAF,EAAAC,EAAAC,cAAA,KAAGE,MAAM,WAAT,qDACAJ,EAAAC,EAAAC,cAAA,2JACAF,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,iBAEAF,EAAAC,EAAAC,cAAA,KAAGE,MAAM,WAAT,wFACAJ,EAAAC,EAAAC,cAAA,wtBAKAF,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,iBAEAF,EAAAC,EAAAC,cAAA,KAAGE,MAAM,WAAT,kEACAJ,EAAAC,EAAAC,cAAA,6PACAF,EAAAC,EAAAC,cAAA,uEAzFcI,cCSEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.dda30605.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<p class=\"title\">개인정보처리방침</p>\n\n\t\t\t\t<p>\n\t\t\t\t\tmcGrid는 오감별앱을 광고 지원 앱으로 만들었습니다. 이 서비스는 기본적으로 무료로 사용할 수 있습니다.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t이 페이지는 방문자가 Google 서비스를 사용하기로 결정한 경우 개인 정보의 수집, 사용 및 공개에 관한\n\t\t\t\t\t정책을 사용자에게 알리는 데 사용됩니다.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t서비스를 사용하시면 정책과 관련하여 정보를 수집하고 사용하는 것에 동의하게 됩니다. 우리가 수집하는\n\t\t\t\t\t개인 정보는 서비스를 제공하고 개선하는 데 사용됩니다. 우리는 이 개인 정보 보호 정책에 설명 된 경우를\n\t\t\t\t\t제외하고는 어떤경우에도 귀하의 정보를 사용하거나 공유하지 않습니다\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t본 개인 정보 취급 방침에서 사용되는 용어는 본 개인 정보 취급 방침에서 달리 정의되지 않는 한 ‘이용\n\t\t\t\t\t약관’에서 액세스 할 수있는 이용 약관과 동일한 의미를 갖습니다.\n\t\t\t\t</p>\n\t\t\t\t<p>&nbsp;</p>\n\n\t\t\t\t<p class=\"section\">• 정보 수집 및 사용</p>\n\t\t\t\t<p>\n\t\t\t\t\t더 나은 경험을 위해 서비스를 사용하는 동안 특정 개인 식별 정보를 제공해야 할 수도 있습니다. 우리가\n\t\t\t\t\t요청한 정보는 이 개인 정보 취급 방침에 설명 된대로 당사에 보유되고 사용됩니다\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t앱은 귀하를 식별하는 데 사용되는 정보를 수집 할 수있는 제 3 자 서비스를 사용합니다. 앱에서 사용하는\n\t\t\t\t\t타사 서비스 제공 업체의 개인 정보 취급 방침에 대한 링크\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href=\"https://policies.google.com/privacy\">Google Play 서비스 </a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href=\"https://support.google.com/admob/answer/6128543?hl=ko\">애드몹</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href=\"http://ad.kakao.com/policy/moment_terms\">카카오</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</p>\n\t\t\t\t\t서비스를 이용하는데 필요한 최소한의 식별정보(로그인ID, 광고ID)만을 이용하며 이름, 주소,\n\t\t\t\t\t이메일정보등은 외부(서버등)에 절대 수집하거나 저장하지 않습니다\n\t\t\t\t</p>\n\t\t\t\t<p>&nbsp;</p>\n\n\t\t\t\t<p class=\"section\">• 쿠키</p>\n\t\t\t\t<p>\n\t\t\t\t\t앱은 서비스에 필요한 위치정보(위도,경도,주소)을 앱 내부에 저장하여 사용하고 있습니다. 해당 정보는\n\t\t\t\t\t외부(서버등)에 절대 전달되지 않으며 앱 삭제 즉시 폐기 됩니다.\n\t\t\t\t</p>\n\t\t\t\t<p>&nbsp;</p>\n\n\t\t\t\t<p class=\"section\">• 다른 사이트 링크</p>\n\t\t\t\t<p>\n\t\t\t\t\t이 서비스에는 다른 사이트에 대한 링크가 포함되어있을 수 있습니다. 제 3 자 링크를 클릭하면 해당\n\t\t\t\t\t사이트로 연결됩니다. 이러한 외부 사이트는 mcGrid에서 운영하지 않습니다. 따라서 이 웹 사이트의 개인\n\t\t\t\t\t정보 취급 방침을 검토하는 것이 좋습니다. 우리는 제3자 사이트 또는 서비스의 내용, 개인 정보 보호 정책\n\t\t\t\t\t또는 관행에 대해 어떠한 통제도하지 않으며 책임을지지 않습니다.\n\t\t\t\t</p>\n\t\t\t\t<p>&nbsp;</p>\n\n\t\t\t\t<p class=\"section\">• 어린이 개인 정보 보호</p>\n\t\t\t\t<p>\n\t\t\t\t\t이 서비스는 전연령을 대상으로 합니다. 서비스를 이용하는데 필요한 최소한의 식별정보(로그인ID)만을\n\t\t\t\t\t이용하며 이름, 주소, 이메일정보등은 외부(서버등)에 절대 수집하거나 저장하지 않습니다. 부모님 또는\n\t\t\t\t\t보호자이며 자녀가 개인 정보를 제공 한 사실을 알고 계시다면 저희에게 연락하여 필요한 조치를 취할 수\n\t\t\t\t\t있도록하십시오.\n\t\t\t\t</p>\n\t\t\t\t<p>&nbsp;</p>\n\n\t\t\t\t<p class=\"section\">• 서비스제공국가</p>\n\t\t\t\t<p>해당서비스의 내용은 대한민국을 주요대상으로 합니다</p>\n\t\t\t\t<p>This app is currently only available in the Korea.</p>\n\t\t\t\t<p>&nbsp;</p>\n\n\t\t\t\t<p class=\"section\">• 이 개인 정보 보호 정책의 변경</p>\n\t\t\t\t<p>\n\t\t\t\t\t개인 정보 보호 정책은 수시로 업데이트 될 수 있습니다. 따라서 이 페이지를 정기적으로 검토하여 변경\n\t\t\t\t\t사항을 확인하는 것이 좋습니다. 이 페이지에 새로운 개인 정보 취급 방침을 게시함으로써 변경 사항을\n\t\t\t\t\t알려 드리겠습니다. 이 변경 사항은이 페이지에 게시 된 후 즉시 적용됩니다.\n\t\t\t\t</p>\n\t\t\t\t<p>최종수정 : 2019-02-24</p>\n\t\t\t\t<p>&nbsp;</p>\n\n\t\t\t\t<p class=\"section\">• 서비스제공자 연락처</p>\n\t\t\t\t<p>개인 정보 보호 정책에 관한 질문이나 제안 사항이 있으시면 언제든지 저희에게 연락하십시오.</p>\n\t\t\t\t<p>이메일 주소 : antnf3@gmail.com</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}